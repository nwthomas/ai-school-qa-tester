{"prompt": "Generate a unit test for this function: \n```python\ndef add(a, b):\n    return a + b\n```", "completion": "```python\nimport unittest\n\nclass TestAddFunction(unittest.TestCase):\n    def test_add_positive_numbers(self):\n        self.assertEqual(add(2, 3), 5)\n\n    def test_add_negative_numbers(self):\n        self.assertEqual(add(-1, -1), -2)\n\n    def test_add_positive_and_negative_numbers(self):\n        self.assertEqual(add(-1, 1), 0)\n\n    def test_add_zero(self):\n        self.assertEqual(add(0, 0), 0)\n\nif __name__ == '__main__':\n    unittest.main()\n```"}
{"prompt": "Generate a unit test for this function: \n```python\ndef multiply(a, b):\n    return a * b\n```", "completion": "```python\nimport unittest\n\nclass TestMultiplyFunction(unittest.TestCase):\n    def test_multiply_positive_numbers(self):\n        self.assertEqual(multiply(2, 3), 6)\n\n    def test_multiply_negative_numbers(self):\n        self.assertEqual(multiply(-1, -1), 1)\n\n    def test_multiply_positive_and_negative_numbers(self):\n        self.assertEqual(multiply(-1, 1), -1)\n\n    def test_multiply_by_zero(self):\n        self.assertEqual(multiply(0, 5), 0)\n\nif __name__ == '__main__':\n    unittest.main()\n```"}
{"prompt": "Generate a unit test for this function: \n```python\ndef divide(a, b):\n    if b == 0:\n        raise ValueError('Cannot divide by zero')\n    return a / b\n```", "completion": "```python\nimport unittest\n\nclass TestDivideFunction(unittest.TestCase):\n    def test_divide_positive_numbers(self):\n        self.assertEqual(divide(6, 3), 2)\n\n    def test_divide_negative_numbers(self):\n        self.assertEqual(divide(-6, -3), 2)\n\n    def test_divide_positive_and_negative_numbers(self):\n        self.assertEqual(divide(-6, 3), -2)\n\n    def test_divide_by_zero(self):\n        with self.assertRaises(ValueError):\n            divide(6, 0)\n\nif __name__ == '__main__':\n    unittest.main()\n```"}
{"prompt": "Generate a unit test for this function: \n```python\ndef subtract(a, b):\n    return a - b\n```", "completion": "```python\nimport unittest\n\nclass TestSubtractFunction(unittest.TestCase):\n    def test_subtract_positive_numbers(self):\n        self.assertEqual(subtract(5, 3), 2)\n\n    def test_subtract_negative_numbers(self):\n        self.assertEqual(subtract(-5, -3), -2)\n\n    def test_subtract_positive_and_negative_numbers(self):\n        self.assertEqual(subtract(-5, 3), -8)\n\n    def test_subtract_zero(self):\n        self.assertEqual(subtract(0, 0), 0)\n\nif __name__ == '__main__':\n    unittest.main()\n```"}
